name: ai-license-scan

on:
  pull_request:              # PR が開かれた／更新されたときだけ実行

permissions:
  contents: read
  pull-requests: write
  checks: write
  actions: read

jobs:
  scanoss-code-scan:
    runs-on: ubuntu-latest

    steps:
      # ① ソース取得
      - uses: actions/checkout@v4

      # ② SCANOSS Code Scan - 正しいバージョンを使用
      - name: Run SCANOSS Code Scan
        id: scanoss
        uses: scanoss/gha-code-scan@v1          # ← 正しいバージョン
        # 代替案: 直接Pythonパッケージを使用
        # run: |
        #   pip install scanoss
        #   scanoss-py scan . --format=sarif --output=scanoss.sarif
        with:
          policies: copyleft                    # Copyleft(GPL/LGPL/AGPL) を NG に
          policies.halt_on_failure: true        # 違反があればジョブを失敗に
          output.filepath: scanoss.sarif        # SARIF 出力
          # dependencies.enabled: false         # 依存解析は不要ならコメントアウト

      # ③ SARIF ファイルの検証と修正 - 2025年7月対応
      - name: Validate and fix SARIF file
        run: |
          if [ -f scanoss.sarif ]; then
            echo "🔍 SARIF ファイルの検証中..."
            
            # 基本的なJSON検証
            if ! jq empty scanoss.sarif 2>/dev/null; then
              echo "❌ 無効なJSONファイルです"
              exit 1
            fi
            
            # GitHub SARIF 2.1.0 仕様に準拠するよう修正
            jq '{
              "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
              "version": "2.1.0",
              "runs": [
                {
                  "tool": {
                    "driver": {
                      "name": "SCANOSS",
                      "version": "1.0.0",
                      "informationUri": "https://www.scanoss.com/",
                      "rules": []
                    }
                  },
                  "results": (
                    if .runs and (.runs | length > 0) and .runs[0].results then
                      .runs[0].results
                    else
                      []
                    end
                  )
                }
              ]
            }' scanoss.sarif > scanoss_fixed.sarif
            
            mv scanoss_fixed.sarif scanoss.sarif
            echo "✅ SARIF ファイルを GitHub 2.1.0 仕様に修正しました"
            
            # 結果の確認
            echo "📊 スキャン結果:"
            jq '.runs[0].results | length' scanoss.sarif || echo "結果なし"
            
          else
            echo "❌ SARIFファイルが見つかりません"
            exit 1
          fi

      # ④ セキュリティ強化されたログ出力
      - name: Show scan command + result path
        run: |
          echo "::notice title=Scan Command::${{ steps.scanoss.outputs.stdout-scan-command || 'scanoss scan executed' }}"
          echo "::notice title=Result File::${{ steps.scanoss.outputs.result-filepath || 'scanoss.sarif' }}"
          
      # ⑤ アーティファクトの保存 - 監査証跡のため
      - name: Upload SARIF results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: scanoss-sarif-results
          path: scanoss.sarif
          retention-days: 30

      # ⑥ GitHub Advanced Security統合（エラー許容）
      - name: Upload SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: scanoss.sarif
          category: license-scan
        continue-on-error: true  # SARIFアップロードが失敗してもワークフローを続行

      # ⑦ 代替手段：直接Pythonパッケージを使用（フォールバック）
      - name: Fallback - Direct SCANOSS Python scan
        if: failure()
        run: |
          echo "🔄 SCANOSSアクションが失敗したため、直接Pythonパッケージを使用します"
          pip install scanoss
          scanoss-py scan . --format=sarif --output=scanoss_fallback.sarif
          
          # Copyleftライセンスのチェック
          if jq -r '.runs[0].results[]?.message?.text // empty' scanoss_fallback.sarif | grep -i -E "(GPL|LGPL|AGPL)"; then
            echo "❌ Copyleftライセンスが検出されました"
            exit 1
          fi
          
          echo "✅ フォールバックスキャンが完了しました"
